 /*
 Power of Thor - Episode 1
 Author - Maciej Leciejewski
 */
 
 /*The Goal
Your program must allow Thor to reach the light of power.
  Rules
Thor moves on a map which is 40 wide by 18 high. Note that the coordinates (X and Y) start at the top left! This means the most top left cell has the coordinates "X=0,Y=0" and the most bottom right one has the coordinates "X=39,Y=17".
*/

import java.util.*;
import java.io.*;
import java.math.*;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 * ---
 * Hint: You can use the debug stream to print initialTX and initialTY, if Thor seems not follow your orders.
 **/
class Player {

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int lightX = in.nextInt(); // the X position of the light of power
        int lightY = in.nextInt(); // the Y position of the light of power
        int initialTX = in.nextInt(); // Thor's starting X position
        int initialTY = in.nextInt(); // Thor's starting Y position
        int nowX = initialTX;
        int nowY = initialTY;


        // game loop
        while (true) {
            int remainingTurns = in.nextInt(); // The remaining amount of turns Thor can move. Do not remove this line.

            // Write an action using System.out.println()
            // To debug: System.err.println("Debug messages...");

            String directionX="";
            String directionY="";
            
            if (nowX > lightX) {
                directionX="W";
                nowX = nowX - 1;
            } else if (nowX < lightX) {
                directionX = "E";
                nowX = nowX + 1;
            }
            if (nowY > lightY) {
                directionY = "N";
                nowY = nowY - 1;
            } else if (nowY < lightY) {
                directionY = "S";
                nowY = nowY + 1;
            }
             System.out.println(directionY + directionX);
        }
    }
}
